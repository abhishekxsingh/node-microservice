#  Bitbucket Pipeline for template engine
image: node:16.16.0-alpine

definitions:
  services:
    postgres:
      image: postgres
      environment:
        POSTGRES_DB: 'node_microservice'
        POSTGRES_USER: 'test_user'
        POSTGRES_PASSWORD: 'test_user_password'

pipelines:
  branches:
    task-*:
      - step:
          name: 1. Scanning Git Secrets
          script:
            - apk add --no-cache git && apk add --no-cache make && apk add --no-cache bash
            - echo "Installing Git Secrets"
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/clone-git-secrets.sh
            - echo "Scan Git Secrets"
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/git-secrets.sh

    '{feature-*,bugfix-*,feature/*,bugfix/*}':
      - step:
          name: 1.Running Initial Tests
          services:
            - postgres
          script:
            - apk add --no-cache git && apk add --no-cache make && apk add --no-cache bash
            - echo "Installing Git Secrets"
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/clone-git-secrets.sh
            - cd ${BITBUCKET_CLONE_DIR}/server
            - npm install -g pnpm@latest
            - echo "NPM Installing Packages"
            - pnpm i
            - echo "Scan Git Secrets"
            - cd ${BITBUCKET_CLONE_DIR}
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/git-secrets.sh
            - cd ${BITBUCKET_CLONE_DIR}/server
            - echo "Running Test Cases"
            - npm run test

    '{dev,qa,hotfix-*}':
      - step:
          name: 1.Running Initial Tests
          services:
            - postgres
          script:
            - apk add --no-cache git && apk add --no-cache make && apk add --no-cache bash
            - echo "Installing Git Secrets"
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/clone-git-secrets.sh
            - cd ${BITBUCKET_CLONE_DIR}/server
            - npm install -g pnpm@latest
            - echo "NPM Installing Packages"
            - pnpm i
            - echo "Scan Git Secrets"
            - cd ${BITBUCKET_CLONE_DIR}
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/git-secrets.sh
            - cd ${BITBUCKET_CLONE_DIR}/server
            - echo "Running Test Cases"
            - npm run test
            - echo "Removing unnecessary modules for production deployment"
            - npm prune --production            
            - cp ${BITBUCKET_CLONE_DIR}/Dockerfile ${BITBUCKET_CLONE_DIR}/server
            - cp ${BITBUCKET_CLONE_DIR}/.dockerignore ${BITBUCKET_CLONE_DIR}/server
          artifacts:
            - server/**
      - step:
          name: 2. Create AWS ECR Registry and Push Artifacts
          image: python:2.7.12
          services:
            - docker
          script:
            - bash ${BITBUCKET_CLONE_DIR}/ops/ci/push-docker-image-ecr.sh ${BITBUCKET_CLONE_DIR}/server
      - step:
          name: 3. Creating tag to commit
          script:
            - apk add --no-cache bash && apk add --no-cache curl && apk add --no-cache git
            - bash ${BITBUCKET_CLONE_DIR}/ops/ci/create-tag.sh
    '{test,sit,uat,demo,pre-prod,master}':
      - step:
          name: 1.Running Initial Tests
          services:
            - postgres
          script:
            - apk add --no-cache git && apk add --no-cache make && apk add --no-cache bash
            - echo "Installing Git Secrets"
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/clone-git-secrets.sh
            - cd ${BITBUCKET_CLONE_DIR}/server
            - npm install -g pnpm@latest
            - echo "NPM Installing Packages"
            - pnpm i
            - echo "Scan Git Secrets"
            - cd ${BITBUCKET_CLONE_DIR}
            - source ${BITBUCKET_CLONE_DIR}/ops/ci/git-secrets.sh
            - cd ${BITBUCKET_CLONE_DIR}/server
            - echo "Running Test Cases"
            - npm run test